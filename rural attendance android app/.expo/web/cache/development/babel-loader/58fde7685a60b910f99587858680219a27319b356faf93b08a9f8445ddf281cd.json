{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, Card, Button, SegmentedButtons, DataTable } from 'react-native-paper';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nexport default function ReportsScreen() {\n  var _useState = useState('daily'),\n    _useState2 = _slicedToArray(_useState, 2),\n    reportType = _useState2[0],\n    setReportType = _useState2[1];\n  var _useState3 = useState(new Date().toISOString().split('T')[0]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDate = _useState4[0],\n    setSelectedDate = _useState4[1];\n  var attendanceData = {\n    daily: [{\n      date: '2025-09-05',\n      present: 3,\n      absent: 1,\n      late: 0,\n      total: 4\n    }, {\n      date: '2025-09-04',\n      present: 4,\n      absent: 0,\n      late: 0,\n      total: 4\n    }, {\n      date: '2025-09-03',\n      present: 2,\n      absent: 1,\n      late: 1,\n      total: 4\n    }, {\n      date: '2025-09-02',\n      present: 3,\n      absent: 1,\n      late: 0,\n      total: 4\n    }],\n    weekly: [{\n      week: 'Week 1 (Sep 1-7)',\n      present: 85,\n      absent: 10,\n      late: 5,\n      total: 100\n    }, {\n      week: 'Week 2 (Aug 25-31)',\n      present: 90,\n      absent: 8,\n      late: 2,\n      total: 100\n    }, {\n      week: 'Week 3 (Aug 18-24)',\n      present: 88,\n      absent: 7,\n      late: 5,\n      total: 100\n    }],\n    monthly: [{\n      month: 'September 2025',\n      present: 85,\n      absent: 10,\n      late: 5,\n      total: 100\n    }, {\n      month: 'August 2025',\n      present: 88,\n      absent: 8,\n      late: 4,\n      total: 100\n    }, {\n      month: 'July 2025',\n      present: 92,\n      absent: 5,\n      late: 3,\n      total: 100\n    }]\n  };\n  var studentStats = [{\n    name: 'John Doe',\n    rollNumber: '001',\n    present: 18,\n    absent: 2,\n    late: 0,\n    percentage: 90\n  }, {\n    name: 'Jane Smith',\n    rollNumber: '002',\n    present: 20,\n    absent: 0,\n    late: 0,\n    percentage: 100\n  }, {\n    name: 'Mike Johnson',\n    rollNumber: '003',\n    present: 17,\n    absent: 2,\n    late: 1,\n    percentage: 85\n  }, {\n    name: 'Sarah Wilson',\n    rollNumber: '004',\n    present: 19,\n    absent: 1,\n    late: 0,\n    percentage: 95\n  }];\n  var getAttendancePercentage = function getAttendancePercentage(present, total) {\n    return total > 0 ? (present / total * 100).toFixed(1) : 0;\n  };\n  var exportReport = function exportReport() {\n    console.log('Export functionality would be implemented here');\n  };\n  var renderDashboard = function renderDashboard() {\n    var todayData = attendanceData.daily[0];\n    var overallStats = studentStats.reduce(function (acc, student) {\n      return {\n        present: acc.present + student.present,\n        absent: acc.absent + student.absent,\n        late: acc.late + student.late\n      };\n    }, {\n      present: 0,\n      absent: 0,\n      late: 0\n    });\n    return _jsxs(View, {\n      children: [_jsx(Card, {\n        style: styles.dashboardCard,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"headlineSmall\",\n            style: {\n              color: '#FFFFFF'\n            },\n            children: \"Today's Summary\"\n          }), _jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsxs(View, {\n              style: [styles.summaryItem, {\n                backgroundColor: '#1B5E20'\n              }],\n              children: [_jsx(Text, {\n                variant: \"headlineMedium\",\n                style: {\n                  color: '#4CAF50'\n                },\n                children: todayData.present\n              }), _jsx(Text, {\n                variant: \"bodySmall\",\n                style: {\n                  color: '#FFFFFF'\n                },\n                children: \"Present\"\n              })]\n            }), _jsxs(View, {\n              style: [styles.summaryItem, {\n                backgroundColor: '#E65100'\n              }],\n              children: [_jsx(Text, {\n                variant: \"headlineMedium\",\n                style: {\n                  color: '#FF9800'\n                },\n                children: todayData.late\n              }), _jsx(Text, {\n                variant: \"bodySmall\",\n                style: {\n                  color: '#FFFFFF'\n                },\n                children: \"Late\"\n              })]\n            }), _jsxs(View, {\n              style: [styles.summaryItem, {\n                backgroundColor: '#B71C1C'\n              }],\n              children: [_jsx(Text, {\n                variant: \"headlineMedium\",\n                style: {\n                  color: '#F44336'\n                },\n                children: todayData.absent\n              }), _jsx(Text, {\n                variant: \"bodySmall\",\n                style: {\n                  color: '#FFFFFF'\n                },\n                children: \"Absent\"\n              })]\n            })]\n          }), _jsxs(Text, {\n            variant: \"bodyMedium\",\n            style: styles.percentageText,\n            children: [\"Attendance Rate: \", getAttendancePercentage(todayData.present, todayData.total), \"%\"]\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleLarge\",\n            style: {\n              color: '#FFFFFF'\n            },\n            children: \"Student Performance\"\n          }), _jsxs(DataTable, {\n            children: [_jsxs(DataTable.Header, {\n              children: [_jsx(DataTable.Title, {\n                children: \"Student\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Present\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Absent\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"%\"\n              })]\n            }), studentStats.map(function (student) {\n              return _jsxs(DataTable.Row, {\n                children: [_jsx(DataTable.Cell, {\n                  children: _jsxs(View, {\n                    children: [_jsx(Text, {\n                      variant: \"bodyMedium\",\n                      style: {\n                        color: '#FFFFFF'\n                      },\n                      children: student.name\n                    }), _jsx(Text, {\n                      variant: \"bodySmall\",\n                      style: {\n                        color: '#CCCCCC'\n                      },\n                      children: student.rollNumber\n                    })]\n                  })\n                }), _jsx(DataTable.Cell, {\n                  numeric: true,\n                  children: student.present\n                }), _jsx(DataTable.Cell, {\n                  numeric: true,\n                  children: student.absent\n                }), _jsx(DataTable.Cell, {\n                  numeric: true,\n                  children: _jsxs(Text, {\n                    style: {\n                      color: student.percentage >= 90 ? '#4CAF50' : student.percentage >= 75 ? '#FF9800' : '#F44336'\n                    },\n                    children: [student.percentage, \"%\"]\n                  })\n                })]\n              }, student.rollNumber);\n            })]\n          })]\n        })\n      })]\n    });\n  };\n  var renderReports = function renderReports() {\n    var data = attendanceData[reportType];\n    return _jsx(View, {\n      children: _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleLarge\",\n            style: {\n              color: '#FFFFFF'\n            },\n            children: \"Attendance Reports\"\n          }), _jsx(SegmentedButtons, {\n            value: reportType,\n            onValueChange: setReportType,\n            buttons: [{\n              value: 'daily',\n              label: 'Daily'\n            }, {\n              value: 'weekly',\n              label: 'Weekly'\n            }, {\n              value: 'monthly',\n              label: 'Monthly'\n            }],\n            style: styles.segmentedButtons\n          }), _jsxs(DataTable, {\n            children: [_jsxs(DataTable.Header, {\n              children: [_jsx(DataTable.Title, {\n                children: reportType === 'daily' ? 'Date' : reportType === 'weekly' ? 'Week' : 'Month'\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Present\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Absent\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Late\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"%\"\n              })]\n            }), data.map(function (row, index) {\n              return _jsxs(DataTable.Row, {\n                children: [_jsx(DataTable.Cell, {\n                  children: row.date || row.week || row.month\n                }), _jsx(DataTable.Cell, {\n                  numeric: true,\n                  children: row.present\n                }), _jsx(DataTable.Cell, {\n                  numeric: true,\n                  children: row.absent\n                }), _jsx(DataTable.Cell, {\n                  numeric: true,\n                  children: row.late\n                }), _jsxs(DataTable.Cell, {\n                  numeric: true,\n                  children: [getAttendancePercentage(row.present, row.total), \"%\"]\n                })]\n              }, index);\n            })]\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: exportReport,\n            style: styles.exportButton,\n            icon: \"download\",\n            children: \"Export Report\"\n          })]\n        })\n      })\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [renderDashboard(), renderReports()]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#121212',\n    padding: 16\n  },\n  dashboardCard: {\n    marginBottom: 16,\n    backgroundColor: '#1E1E1E'\n  },\n  card: {\n    marginBottom: 16,\n    backgroundColor: '#1E1E1E'\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 16\n  },\n  summaryItem: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 16,\n    marginHorizontal: 4,\n    borderRadius: 8\n  },\n  percentageText: {\n    textAlign: 'center',\n    marginTop: 8,\n    fontWeight: 'bold',\n    color: '#FFFFFF'\n  },\n  segmentedButtons: {\n    marginVertical: 16\n  },\n  exportButton: {\n    marginTop: 16,\n    backgroundColor: '#90CAF9'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","Dimensions","Text","Card","Button","SegmentedButtons","DataTable","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","ReportsScreen","_useState","_useState2","_slicedToArray","reportType","setReportType","_useState3","Date","toISOString","split","_useState4","selectedDate","setSelectedDate","attendanceData","daily","date","present","absent","late","total","weekly","week","monthly","month","studentStats","name","rollNumber","percentage","getAttendancePercentage","toFixed","exportReport","console","log","renderDashboard","todayData","overallStats","reduce","acc","student","children","style","styles","dashboardCard","Content","variant","color","summaryRow","summaryItem","backgroundColor","percentageText","card","Header","Title","numeric","map","Row","Cell","renderReports","data","value","onValueChange","buttons","label","segmentedButtons","row","index","mode","onPress","exportButton","icon","container","create","flex","padding","marginBottom","flexDirection","justifyContent","marginVertical","alignItems","marginHorizontal","borderRadius","textAlign","marginTop","fontWeight"],"sources":["C:/Users/aanch/rural attendance/rural attendance android app/src/screens/ReportsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView, Dimensions } from 'react-native';\r\nimport { Text, Card, Button, SegmentedButtons, DataTable } from 'react-native-paper';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\nexport default function ReportsScreen() {\r\n  const [reportType, setReportType] = useState('daily');\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n  // Mock data for demonstration\r\n  const attendanceData = {\r\n    daily: [\r\n      { date: '2025-09-05', present: 3, absent: 1, late: 0, total: 4 },\r\n      { date: '2025-09-04', present: 4, absent: 0, late: 0, total: 4 },\r\n      { date: '2025-09-03', present: 2, absent: 1, late: 1, total: 4 },\r\n      { date: '2025-09-02', present: 3, absent: 1, late: 0, total: 4 },\r\n    ],\r\n    weekly: [\r\n      { week: 'Week 1 (Sep 1-7)', present: 85, absent: 10, late: 5, total: 100 },\r\n      { week: 'Week 2 (Aug 25-31)', present: 90, absent: 8, late: 2, total: 100 },\r\n      { week: 'Week 3 (Aug 18-24)', present: 88, absent: 7, late: 5, total: 100 },\r\n    ],\r\n    monthly: [\r\n      { month: 'September 2025', present: 85, absent: 10, late: 5, total: 100 },\r\n      { month: 'August 2025', present: 88, absent: 8, late: 4, total: 100 },\r\n      { month: 'July 2025', present: 92, absent: 5, late: 3, total: 100 },\r\n    ]\r\n  };\r\n\r\n  const studentStats = [\r\n    { name: 'John Doe', rollNumber: '001', present: 18, absent: 2, late: 0, percentage: 90 },\r\n    { name: 'Jane Smith', rollNumber: '002', present: 20, absent: 0, late: 0, percentage: 100 },\r\n    { name: 'Mike Johnson', rollNumber: '003', present: 17, absent: 2, late: 1, percentage: 85 },\r\n    { name: 'Sarah Wilson', rollNumber: '004', present: 19, absent: 1, late: 0, percentage: 95 },\r\n  ];\r\n\r\n  const getAttendancePercentage = (present, total) => {\r\n    return total > 0 ? ((present / total) * 100).toFixed(1) : 0;\r\n  };\r\n\r\n  const exportReport = () => {\r\n    // This would typically generate and export a PDF or CSV file\r\n    console.log('Export functionality would be implemented here');\r\n  };\r\n\r\n  const renderDashboard = () => {\r\n    const todayData = attendanceData.daily[0];\r\n    const overallStats = studentStats.reduce((acc, student) => ({\r\n      present: acc.present + student.present,\r\n      absent: acc.absent + student.absent,\r\n      late: acc.late + student.late\r\n    }), { present: 0, absent: 0, late: 0 });\r\n\r\n    return (\r\n      <View>\r\n        <Card style={styles.dashboardCard}>\r\n          <Card.Content>\r\n            <Text variant=\"headlineSmall\" style={{ color: '#FFFFFF' }}>Today's Summary</Text>\r\n            <View style={styles.summaryRow}>\r\n              <View style={[styles.summaryItem, { backgroundColor: '#1B5E20' }]}>\r\n                <Text variant=\"headlineMedium\" style={{ color: '#4CAF50' }}>\r\n                  {todayData.present}\r\n                </Text>\r\n                <Text variant=\"bodySmall\" style={{ color: '#FFFFFF' }}>Present</Text>\r\n              </View>\r\n              <View style={[styles.summaryItem, { backgroundColor: '#E65100' }]}>\r\n                <Text variant=\"headlineMedium\" style={{ color: '#FF9800' }}>\r\n                  {todayData.late}\r\n                </Text>\r\n                <Text variant=\"bodySmall\" style={{ color: '#FFFFFF' }}>Late</Text>\r\n              </View>\r\n              <View style={[styles.summaryItem, { backgroundColor: '#B71C1C' }]}>\r\n                <Text variant=\"headlineMedium\" style={{ color: '#F44336' }}>\r\n                  {todayData.absent}\r\n                </Text>\r\n                <Text variant=\"bodySmall\" style={{ color: '#FFFFFF' }}>Absent</Text>\r\n              </View>\r\n            </View>\r\n            <Text variant=\"bodyMedium\" style={styles.percentageText}>\r\n              Attendance Rate: {getAttendancePercentage(todayData.present, todayData.total)}%\r\n            </Text>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text variant=\"titleLarge\" style={{ color: '#FFFFFF' }}>Student Performance</Text>\r\n            <DataTable>\r\n              <DataTable.Header>\r\n                <DataTable.Title>Student</DataTable.Title>\r\n                <DataTable.Title numeric>Present</DataTable.Title>\r\n                <DataTable.Title numeric>Absent</DataTable.Title>\r\n                <DataTable.Title numeric>%</DataTable.Title>\r\n              </DataTable.Header>\r\n\r\n              {studentStats.map((student) => (\r\n                <DataTable.Row key={student.rollNumber}>\r\n                  <DataTable.Cell>\r\n                    <View>\r\n                      <Text variant=\"bodyMedium\" style={{ color: '#FFFFFF' }}>{student.name}</Text>\r\n                      <Text variant=\"bodySmall\" style={{ color: '#CCCCCC' }}>{student.rollNumber}</Text>\r\n                    </View>\r\n                  </DataTable.Cell>\r\n                  <DataTable.Cell numeric>{student.present}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>{student.absent}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>\r\n                    <Text style={{ \r\n                      color: student.percentage >= 90 ? '#4CAF50' : \r\n                             student.percentage >= 75 ? '#FF9800' : '#F44336' \r\n                    }}>\r\n                      {student.percentage}%\r\n                    </Text>\r\n                  </DataTable.Cell>\r\n                </DataTable.Row>\r\n              ))}\r\n            </DataTable>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderReports = () => {\r\n    const data = attendanceData[reportType];\r\n    \r\n    return (\r\n      <View>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text variant=\"titleLarge\" style={{ color: '#FFFFFF' }}>Attendance Reports</Text>\r\n            \r\n            <SegmentedButtons\r\n              value={reportType}\r\n              onValueChange={setReportType}\r\n              buttons={[\r\n                { value: 'daily', label: 'Daily' },\r\n                { value: 'weekly', label: 'Weekly' },\r\n                { value: 'monthly', label: 'Monthly' },\r\n              ]}\r\n              style={styles.segmentedButtons}\r\n            />\r\n\r\n            <DataTable>\r\n              <DataTable.Header>\r\n                <DataTable.Title>\r\n                  {reportType === 'daily' ? 'Date' : \r\n                   reportType === 'weekly' ? 'Week' : 'Month'}\r\n                </DataTable.Title>\r\n                <DataTable.Title numeric>Present</DataTable.Title>\r\n                <DataTable.Title numeric>Absent</DataTable.Title>\r\n                <DataTable.Title numeric>Late</DataTable.Title>\r\n                <DataTable.Title numeric>%</DataTable.Title>\r\n              </DataTable.Header>\r\n\r\n              {data.map((row, index) => (\r\n                <DataTable.Row key={index}>\r\n                  <DataTable.Cell>\r\n                    {row.date || row.week || row.month}\r\n                  </DataTable.Cell>\r\n                  <DataTable.Cell numeric>{row.present}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>{row.absent}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>{row.late}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>\r\n                    {getAttendancePercentage(row.present, row.total)}%\r\n                  </DataTable.Cell>\r\n                </DataTable.Row>\r\n              ))}\r\n            </DataTable>\r\n\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={exportReport}\r\n              style={styles.exportButton}\r\n              icon=\"download\"\r\n            >\r\n              Export Report\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        {renderDashboard()}\r\n        {renderReports()}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#121212',\r\n    padding: 16,\r\n  },\r\n  dashboardCard: {\r\n    marginBottom: 16,\r\n    backgroundColor: '#1E1E1E',\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n    backgroundColor: '#1E1E1E',\r\n  },\r\n  summaryRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 16,\r\n  },\r\n  summaryItem: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    marginHorizontal: 4,\r\n    borderRadius: 8,\r\n  },\r\n  percentageText: {\r\n    textAlign: 'center',\r\n    marginTop: 8,\r\n    fontWeight: 'bold',\r\n    color: '#FFFFFF',\r\n  },\r\n  segmentedButtons: {\r\n    marginVertical: 16,\r\n  },\r\n  exportButton: {\r\n    marginTop: 16,\r\n    backgroundColor: '#90CAF9',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}