{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, List, Switch, Button, TextInput, Divider } from 'react-native-paper';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen() {\n  var _useState = useState({\n      locationTracking: true,\n      cameraAccess: true,\n      notifications: true,\n      autoSync: false,\n      biometricAuth: false,\n      darkMode: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    settings = _useState2[0],\n    setSettings = _useState2[1];\n  var _useState3 = useState({\n      schoolName: 'Rural Primary School',\n      principalName: 'Dr. Smith Johnson',\n      address: 'Village Center, Rural District',\n      phone: '+1234567890',\n      email: 'principal@ruralschool.edu'\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    schoolInfo = _useState4[0],\n    setSchoolInfo = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEditing = _useState6[0],\n    setIsEditing = _useState6[1];\n  var toggleSetting = function toggleSetting(key) {\n    setSettings(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, key, !prev[key]));\n    });\n  };\n  var saveSchoolInfo = function saveSchoolInfo() {\n    setIsEditing(false);\n    Alert.alert('Success', 'School information updated successfully!');\n  };\n  var exportData = function exportData() {\n    Alert.alert('Export Data', 'This will export all attendance data to a CSV file. Continue?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Export',\n      onPress: function onPress() {\n        return console.log('Export data functionality');\n      }\n    }]);\n  };\n  var importData = function importData() {\n    Alert.alert('Import Data', 'This will import student data from a CSV file. This may overwrite existing data. Continue?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Import',\n      onPress: function onPress() {\n        return console.log('Import data functionality');\n      }\n    }]);\n  };\n  var resetApp = function resetApp() {\n    Alert.alert('Reset App', 'This will delete all data and reset the app to default settings. This action cannot be undone.', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Reset',\n      style: 'destructive',\n      onPress: function onPress() {\n        return console.log('Reset app functionality');\n      }\n    }]);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleLarge\",\n            children: \"App Settings\"\n          }), _jsx(List.Item, {\n            title: \"Location Tracking\",\n            description: \"Track location for attendance verification\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"map-marker\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: settings.locationTracking,\n                onValueChange: function onValueChange() {\n                  return toggleSetting('locationTracking');\n                }\n              });\n            }\n          }), _jsx(List.Item, {\n            title: \"Camera Access\",\n            description: \"Enable camera for photo verification\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"camera\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: settings.cameraAccess,\n                onValueChange: function onValueChange() {\n                  return toggleSetting('cameraAccess');\n                }\n              });\n            }\n          }), _jsx(List.Item, {\n            title: \"Push Notifications\",\n            description: \"Receive attendance reminders\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"bell\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: settings.notifications,\n                onValueChange: function onValueChange() {\n                  return toggleSetting('notifications');\n                }\n              });\n            }\n          }), _jsx(List.Item, {\n            title: \"Auto Sync\",\n            description: \"Automatically sync data when online\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"sync\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: settings.autoSync,\n                onValueChange: function onValueChange() {\n                  return toggleSetting('autoSync');\n                }\n              });\n            }\n          }), _jsx(List.Item, {\n            title: \"Biometric Authentication\",\n            description: \"Use fingerprint or face unlock\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"fingerprint\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: settings.biometricAuth,\n                onValueChange: function onValueChange() {\n                  return toggleSetting('biometricAuth');\n                }\n              });\n            }\n          }), _jsx(List.Item, {\n            title: \"Dark Mode\",\n            description: \"Use dark theme\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"theme-light-dark\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: settings.darkMode,\n                onValueChange: function onValueChange() {\n                  return toggleSetting('darkMode');\n                }\n              });\n            }\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsxs(View, {\n            style: styles.sectionHeader,\n            children: [_jsx(Text, {\n              variant: \"titleLarge\",\n              children: \"School Information\"\n            }), _jsx(Button, {\n              mode: isEditing ? \"contained\" : \"outlined\",\n              onPress: function onPress() {\n                return setIsEditing(!isEditing);\n              },\n              compact: true,\n              children: isEditing ? 'Cancel' : 'Edit'\n            })]\n          }), _jsx(TextInput, {\n            label: \"School Name\",\n            value: schoolInfo.schoolName,\n            onChangeText: function onChangeText(text) {\n              return setSchoolInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  schoolName: text\n                });\n              });\n            },\n            disabled: !isEditing,\n            style: styles.input\n          }), _jsx(TextInput, {\n            label: \"Principal Name\",\n            value: schoolInfo.principalName,\n            onChangeText: function onChangeText(text) {\n              return setSchoolInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  principalName: text\n                });\n              });\n            },\n            disabled: !isEditing,\n            style: styles.input\n          }), _jsx(TextInput, {\n            label: \"Address\",\n            value: schoolInfo.address,\n            onChangeText: function onChangeText(text) {\n              return setSchoolInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  address: text\n                });\n              });\n            },\n            disabled: !isEditing,\n            multiline: true,\n            style: styles.input\n          }), _jsx(TextInput, {\n            label: \"Phone\",\n            value: schoolInfo.phone,\n            onChangeText: function onChangeText(text) {\n              return setSchoolInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  phone: text\n                });\n              });\n            },\n            disabled: !isEditing,\n            keyboardType: \"phone-pad\",\n            style: styles.input\n          }), _jsx(TextInput, {\n            label: \"Email\",\n            value: schoolInfo.email,\n            onChangeText: function onChangeText(text) {\n              return setSchoolInfo(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  email: text\n                });\n              });\n            },\n            disabled: !isEditing,\n            keyboardType: \"email-address\",\n            style: styles.input\n          }), isEditing && _jsx(Button, {\n            mode: \"contained\",\n            onPress: saveSchoolInfo,\n            style: styles.saveButton,\n            children: \"Save Changes\"\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleLarge\",\n            children: \"Data Management\"\n          }), _jsx(List.Item, {\n            title: \"Export Data\",\n            description: \"Export attendance data to CSV\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"export\"\n              }));\n            },\n            onPress: exportData\n          }), _jsx(List.Item, {\n            title: \"Import Data\",\n            description: \"Import student data from CSV\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"import\"\n              }));\n            },\n            onPress: importData\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsx(List.Item, {\n            title: \"Reset App\",\n            description: \"Delete all data and reset settings\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"delete-forever\",\n                color: \"#F44336\"\n              }));\n            },\n            onPress: resetApp,\n            titleStyle: {\n              color: '#F44336'\n            }\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleLarge\",\n            children: \"About\"\n          }), _jsx(List.Item, {\n            title: \"App Version\",\n            description: \"1.0.0\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"information\"\n              }));\n            }\n          }), _jsx(List.Item, {\n            title: \"Developer\",\n            description: \"Rural Education Solutions\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"account-group\"\n              }));\n            }\n          }), _jsx(List.Item, {\n            title: \"Support\",\n            description: \"Contact support team\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"help-circle\"\n              }));\n            },\n            onPress: function onPress() {\n              return console.log('Open support');\n            }\n          }), _jsx(List.Item, {\n            title: \"Privacy Policy\",\n            description: \"View privacy policy\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"shield-account\"\n              }));\n            },\n            onPress: function onPress() {\n              return console.log('Open privacy policy');\n            }\n          })]\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    padding: 16\n  },\n  card: {\n    marginBottom: 16\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  input: {\n    marginBottom: 12\n  },\n  saveButton: {\n    marginTop: 16\n  },\n  divider: {\n    marginVertical: 8\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","Alert","Text","Card","List","Switch","Button","TextInput","Divider","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useState","locationTracking","cameraAccess","notifications","autoSync","biometricAuth","darkMode","_useState2","_slicedToArray","settings","setSettings","_useState3","schoolName","principalName","address","phone","email","_useState4","schoolInfo","setSchoolInfo","_useState5","_useState6","isEditing","setIsEditing","toggleSetting","key","prev","_objectSpread","_defineProperty","saveSchoolInfo","alert","exportData","text","style","onPress","console","log","importData","resetApp","styles","container","children","card","Content","variant","Item","title","description","left","props","Icon","icon","right","value","onValueChange","sectionHeader","mode","compact","label","onChangeText","disabled","input","multiline","keyboardType","saveButton","divider","color","titleStyle","create","flex","backgroundColor","padding","marginBottom","flexDirection","justifyContent","alignItems","marginTop","marginVertical"],"sources":["C:/Users/aanch/rural attendance/rural attendance android app/src/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\r\nimport { Text, Card, List, Switch, Button, TextInput, Divider } from 'react-native-paper';\r\n\r\nexport default function SettingsScreen() {\r\n  const [settings, setSettings] = useState({\r\n    locationTracking: true,\r\n    cameraAccess: true,\r\n    notifications: true,\r\n    autoSync: false,\r\n    biometricAuth: false,\r\n    darkMode: false,\r\n  });\r\n\r\n  const [schoolInfo, setSchoolInfo] = useState({\r\n    schoolName: 'Rural Primary School',\r\n    principalName: 'Dr. Smith Johnson',\r\n    address: 'Village Center, Rural District',\r\n    phone: '+1234567890',\r\n    email: 'principal@ruralschool.edu',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const toggleSetting = (key) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [key]: !prev[key]\r\n    }));\r\n  };\r\n\r\n  const saveSchoolInfo = () => {\r\n    // Here you would typically save to a database\r\n    setIsEditing(false);\r\n    Alert.alert('Success', 'School information updated successfully!');\r\n  };\r\n\r\n  const exportData = () => {\r\n    Alert.alert(\r\n      'Export Data',\r\n      'This will export all attendance data to a CSV file. Continue?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        { text: 'Export', onPress: () => console.log('Export data functionality') }\r\n      ]\r\n    );\r\n  };\r\n\r\n  const importData = () => {\r\n    Alert.alert(\r\n      'Import Data',\r\n      'This will import student data from a CSV file. This may overwrite existing data. Continue?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        { text: 'Import', onPress: () => console.log('Import data functionality') }\r\n      ]\r\n    );\r\n  };\r\n\r\n  const resetApp = () => {\r\n    Alert.alert(\r\n      'Reset App',\r\n      'This will delete all data and reset the app to default settings. This action cannot be undone.',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        { \r\n          text: 'Reset', \r\n          style: 'destructive',\r\n          onPress: () => console.log('Reset app functionality') \r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        {/* App Settings */}\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text variant=\"titleLarge\">App Settings</Text>\r\n            \r\n            <List.Item\r\n              title=\"Location Tracking\"\r\n              description=\"Track location for attendance verification\"\r\n              left={props => <List.Icon {...props} icon=\"map-marker\" />}\r\n              right={() => (\r\n                <Switch\r\n                  value={settings.locationTracking}\r\n                  onValueChange={() => toggleSetting('locationTracking')}\r\n                />\r\n              )}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Camera Access\"\r\n              description=\"Enable camera for photo verification\"\r\n              left={props => <List.Icon {...props} icon=\"camera\" />}\r\n              right={() => (\r\n                <Switch\r\n                  value={settings.cameraAccess}\r\n                  onValueChange={() => toggleSetting('cameraAccess')}\r\n                />\r\n              )}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Push Notifications\"\r\n              description=\"Receive attendance reminders\"\r\n              left={props => <List.Icon {...props} icon=\"bell\" />}\r\n              right={() => (\r\n                <Switch\r\n                  value={settings.notifications}\r\n                  onValueChange={() => toggleSetting('notifications')}\r\n                />\r\n              )}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Auto Sync\"\r\n              description=\"Automatically sync data when online\"\r\n              left={props => <List.Icon {...props} icon=\"sync\" />}\r\n              right={() => (\r\n                <Switch\r\n                  value={settings.autoSync}\r\n                  onValueChange={() => toggleSetting('autoSync')}\r\n                />\r\n              )}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Biometric Authentication\"\r\n              description=\"Use fingerprint or face unlock\"\r\n              left={props => <List.Icon {...props} icon=\"fingerprint\" />}\r\n              right={() => (\r\n                <Switch\r\n                  value={settings.biometricAuth}\r\n                  onValueChange={() => toggleSetting('biometricAuth')}\r\n                />\r\n              )}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Dark Mode\"\r\n              description=\"Use dark theme\"\r\n              left={props => <List.Icon {...props} icon=\"theme-light-dark\" />}\r\n              right={() => (\r\n                <Switch\r\n                  value={settings.darkMode}\r\n                  onValueChange={() => toggleSetting('darkMode')}\r\n                />\r\n              )}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {/* School Information */}\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <View style={styles.sectionHeader}>\r\n              <Text variant=\"titleLarge\">School Information</Text>\r\n              <Button \r\n                mode={isEditing ? \"contained\" : \"outlined\"}\r\n                onPress={() => setIsEditing(!isEditing)}\r\n                compact\r\n              >\r\n                {isEditing ? 'Cancel' : 'Edit'}\r\n              </Button>\r\n            </View>\r\n\r\n            <TextInput\r\n              label=\"School Name\"\r\n              value={schoolInfo.schoolName}\r\n              onChangeText={(text) => setSchoolInfo(prev => ({ ...prev, schoolName: text }))}\r\n              disabled={!isEditing}\r\n              style={styles.input}\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Principal Name\"\r\n              value={schoolInfo.principalName}\r\n              onChangeText={(text) => setSchoolInfo(prev => ({ ...prev, principalName: text }))}\r\n              disabled={!isEditing}\r\n              style={styles.input}\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Address\"\r\n              value={schoolInfo.address}\r\n              onChangeText={(text) => setSchoolInfo(prev => ({ ...prev, address: text }))}\r\n              disabled={!isEditing}\r\n              multiline\r\n              style={styles.input}\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Phone\"\r\n              value={schoolInfo.phone}\r\n              onChangeText={(text) => setSchoolInfo(prev => ({ ...prev, phone: text }))}\r\n              disabled={!isEditing}\r\n              keyboardType=\"phone-pad\"\r\n              style={styles.input}\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Email\"\r\n              value={schoolInfo.email}\r\n              onChangeText={(text) => setSchoolInfo(prev => ({ ...prev, email: text }))}\r\n              disabled={!isEditing}\r\n              keyboardType=\"email-address\"\r\n              style={styles.input}\r\n            />\r\n\r\n            {isEditing && (\r\n              <Button \r\n                mode=\"contained\" \r\n                onPress={saveSchoolInfo}\r\n                style={styles.saveButton}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            )}\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {/* Data Management */}\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text variant=\"titleLarge\">Data Management</Text>\r\n            \r\n            <List.Item\r\n              title=\"Export Data\"\r\n              description=\"Export attendance data to CSV\"\r\n              left={props => <List.Icon {...props} icon=\"export\" />}\r\n              onPress={exportData}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Import Data\"\r\n              description=\"Import student data from CSV\"\r\n              left={props => <List.Icon {...props} icon=\"import\" />}\r\n              onPress={importData}\r\n            />\r\n            \r\n            <Divider style={styles.divider} />\r\n            \r\n            <List.Item\r\n              title=\"Reset App\"\r\n              description=\"Delete all data and reset settings\"\r\n              left={props => <List.Icon {...props} icon=\"delete-forever\" color=\"#F44336\" />}\r\n              onPress={resetApp}\r\n              titleStyle={{ color: '#F44336' }}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {/* App Information */}\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text variant=\"titleLarge\">About</Text>\r\n            \r\n            <List.Item\r\n              title=\"App Version\"\r\n              description=\"1.0.0\"\r\n              left={props => <List.Icon {...props} icon=\"information\" />}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Developer\"\r\n              description=\"Rural Education Solutions\"\r\n              left={props => <List.Icon {...props} icon=\"account-group\" />}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Support\"\r\n              description=\"Contact support team\"\r\n              left={props => <List.Icon {...props} icon=\"help-circle\" />}\r\n              onPress={() => console.log('Open support')}\r\n            />\r\n            \r\n            <List.Item\r\n              title=\"Privacy Policy\"\r\n              description=\"View privacy policy\"\r\n              left={props => <List.Icon {...props} icon=\"shield-account\" />}\r\n              onPress={() => console.log('Open privacy policy')}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 16,\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    marginBottom: 12,\r\n  },\r\n  saveButton: {\r\n    marginTop: 16,\r\n  },\r\n  divider: {\r\n    marginVertical: 8,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}