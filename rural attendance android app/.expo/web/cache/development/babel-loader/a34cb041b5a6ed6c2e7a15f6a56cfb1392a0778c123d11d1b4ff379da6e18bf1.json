{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Camera } from 'expo-camera';\nimport { Button, Text, Card, IconButton } from 'react-native-paper';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nexport default function QRScanner(_ref) {\n  var onScan = _ref.onScan,\n    onClose = _ref.onClose,\n    visible = _ref.visible;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  useEffect(function () {\n    var getCameraPermissions = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _yield$Camera$request = yield Camera.requestCameraPermissionsAsync(),\n          status = _yield$Camera$request.status;\n        setHasPermission(status === 'granted');\n      });\n      return function getCameraPermissions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getCameraPermissions();\n  }, []);\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref3) {\n    var type = _ref3.type,\n      data = _ref3.data;\n    setScanned(true);\n    try {\n      var studentData = JSON.parse(data);\n      if (studentData.type === 'student_qr' && studentData.id) {\n        onScan(studentData);\n      } else {\n        Alert.alert('Invalid QR Code', 'This QR code is not a valid student code.');\n      }\n    } catch (error) {\n      Alert.alert('Invalid QR Code', 'Could not read student information from this QR code.');\n    }\n  };\n  if (hasPermission === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Card, {\n        style: styles.card,\n        children: _jsx(Card.Content, {\n          children: _jsx(Text, {\n            style: {\n              color: '#FFFFFF'\n            },\n            children: \"Requesting camera permission...\"\n          })\n        })\n      })\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            style: {\n              color: '#FFFFFF'\n            },\n            children: \"No access to camera\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: onClose,\n            style: styles.button,\n            children: \"Close\"\n          })]\n        })\n      })\n    });\n  }\n  if (!visible) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        variant: \"headlineSmall\",\n        style: styles.headerText,\n        children: \"Scan Student QR Code\"\n      }), _jsx(IconButton, {\n        icon: \"close\",\n        iconColor: \"#FFFFFF\",\n        size: 24,\n        onPress: onClose\n      })]\n    }), _jsx(Camera, {\n      style: styles.scanner,\n      type: Camera.Constants.Type.back,\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      barCodeScannerSettings: {\n        barCodeTypes: [Camera.Constants.BarCodeType.qr]\n      }\n    }), _jsxs(View, {\n      style: styles.overlay,\n      children: [_jsx(View, {\n        style: styles.scanFrame\n      }), _jsx(Text, {\n        style: styles.scanText,\n        children: \"Position the QR code within the frame\"\n      })]\n    }), scanned && _jsx(View, {\n      style: styles.rescanContainer,\n      children: _jsx(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return setScanned(false);\n        },\n        style: styles.rescanButton,\n        children: \"Tap to Scan Again\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#121212'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#1E1E1E'\n  },\n  headerText: {\n    color: '#FFFFFF'\n  },\n  scanner: {\n    flex: 1\n  },\n  overlay: {\n    position: 'absolute',\n    top: 80,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scanFrame: {\n    width: width * 0.7,\n    height: width * 0.7,\n    borderWidth: 2,\n    borderColor: '#90CAF9',\n    backgroundColor: 'transparent',\n    borderRadius: 10\n  },\n  scanText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    marginTop: 20,\n    textAlign: 'center'\n  },\n  rescanContainer: {\n    position: 'absolute',\n    bottom: 50,\n    left: 20,\n    right: 20\n  },\n  rescanButton: {\n    backgroundColor: '#90CAF9'\n  },\n  card: {\n    margin: 20,\n    backgroundColor: '#1E1E1E'\n  },\n  button: {\n    marginTop: 16,\n    backgroundColor: '#90CAF9'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Dimensions","Alert","Camera","Button","Text","Card","IconButton","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","QRScanner","_ref","onScan","onClose","visible","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","getCameraPermissions","_ref2","_asyncToGenerator","_yield$Camera$request","requestCameraPermissionsAsync","status","apply","arguments","handleBarCodeScanned","_ref3","type","data","studentData","JSON","parse","id","alert","error","style","styles","container","children","card","Content","color","mode","onPress","button","header","variant","headerText","icon","iconColor","size","scanner","Constants","Type","back","onBarCodeScanned","undefined","barCodeScannerSettings","barCodeTypes","BarCodeType","qr","overlay","scanFrame","scanText","rescanContainer","rescanButton","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","position","top","left","right","bottom","height","borderWidth","borderColor","borderRadius","fontSize","marginTop","textAlign","margin"],"sources":["C:/Users/aanch/rural attendance/rural attendance android app/src/components/QRScanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Dimensions, Alert } from 'react-native';\r\nimport { Camera } from 'expo-camera';\r\nimport { Button, Text, Card, IconButton } from 'react-native-paper';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\nexport default function QRScanner({ onScan, onClose, visible }) {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getCameraPermissions = async () => {\r\n      const { status } = await Camera.requestCameraPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    };\r\n\r\n    getCameraPermissions();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    try {\r\n      const studentData = JSON.parse(data);\r\n      if (studentData.type === 'student_qr' && studentData.id) {\r\n        onScan(studentData);\r\n      } else {\r\n        Alert.alert('Invalid QR Code', 'This QR code is not a valid student code.');\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Invalid QR Code', 'Could not read student information from this QR code.');\r\n    }\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={{ color: '#FFFFFF' }}>Requesting camera permission...</Text>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasPermission === false) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={{ color: '#FFFFFF' }}>No access to camera</Text>\r\n            <Button mode=\"contained\" onPress={onClose} style={styles.button}>\r\n              Close\r\n            </Button>\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text variant=\"headlineSmall\" style={styles.headerText}>\r\n          Scan Student QR Code\r\n        </Text>\r\n        <IconButton\r\n          icon=\"close\"\r\n          iconColor=\"#FFFFFF\"\r\n          size={24}\r\n          onPress={onClose}\r\n        />\r\n      </View>\r\n\r\n      <Camera\r\n        style={styles.scanner}\r\n        type={Camera.Constants.Type.back}\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        barCodeScannerSettings={{\r\n          barCodeTypes: [Camera.Constants.BarCodeType.qr],\r\n        }}\r\n      />\r\n\r\n      <View style={styles.overlay}>\r\n        <View style={styles.scanFrame} />\r\n        <Text style={styles.scanText}>\r\n          Position the QR code within the frame\r\n        </Text>\r\n      </View>\r\n\r\n      {scanned && (\r\n        <View style={styles.rescanContainer}>\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={() => setScanned(false)}\r\n            style={styles.rescanButton}\r\n          >\r\n            Tap to Scan Again\r\n          </Button>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#121212',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    backgroundColor: '#1E1E1E',\r\n  },\r\n  headerText: {\r\n    color: '#FFFFFF',\r\n  },\r\n  scanner: {\r\n    flex: 1,\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 80,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  scanFrame: {\r\n    width: width * 0.7,\r\n    height: width * 0.7,\r\n    borderWidth: 2,\r\n    borderColor: '#90CAF9',\r\n    backgroundColor: 'transparent',\r\n    borderRadius: 10,\r\n  },\r\n  scanText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n  },\r\n  rescanContainer: {\r\n    position: 'absolute',\r\n    bottom: 50,\r\n    left: 20,\r\n    right: 20,\r\n  },\r\n  rescanButton: {\r\n    backgroundColor: '#90CAF9',\r\n  },\r\n  card: {\r\n    margin: 20,\r\n    backgroundColor: '#1E1E1E',\r\n  },\r\n  button: {\r\n    marginTop: 16,\r\n    backgroundColor: '#90CAF9',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}