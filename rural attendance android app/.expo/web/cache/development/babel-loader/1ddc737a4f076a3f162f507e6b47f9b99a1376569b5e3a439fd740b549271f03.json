{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Text, Button, Card, FAB, List, Chip } from 'react-native-paper';\nimport * as Location from 'expo-location';\nimport { Camera } from 'expo-camera';\nimport QRScannerWeb from \"../components/QRScannerWeb\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AttendanceScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState([{\n      id: 1,\n      name: 'John Doe',\n      status: null,\n      rollNumber: '001'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      status: null,\n      rollNumber: '002'\n    }, {\n      id: 3,\n      name: 'Mike Johnson',\n      status: null,\n      rollNumber: '003'\n    }, {\n      id: 4,\n      name: 'Sarah Wilson',\n      status: null,\n      rollNumber: '004'\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    students = _useState4[0],\n    setStudents = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    cameraPermission = _useState6[0],\n    setCameraPermission = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showQRScanner = _useState8[0],\n    setShowQRScanner = _useState8[1];\n  useEffect(function () {\n    getLocationPermission();\n    getCameraPermission();\n  }, []);\n  var getLocationPermission = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission Denied', 'Location permission is required for attendance tracking');\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setLocation(location);\n    });\n    return function getLocationPermission() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getCameraPermission = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$Camera$request = yield Camera.requestCameraPermissionsAsync(),\n        status = _yield$Camera$request.status;\n      setCameraPermission(status === 'granted');\n    });\n    return function getCameraPermission() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var markAttendance = function markAttendance(studentId, status) {\n    setStudents(function (prev) {\n      return prev.map(function (student) {\n        return student.id === studentId ? _objectSpread(_objectSpread({}, student), {}, {\n          status: status\n        }) : student;\n      });\n    });\n  };\n  var handleQRScan = function handleQRScan(qrData) {\n    var student = students.find(function (s) {\n      return s.id === qrData.id;\n    });\n    if (student) {\n      markAttendance(qrData.id, 'present');\n      Alert.alert('Success', `${qrData.name} marked as present!`);\n    } else {\n      Alert.alert('Error', 'Student not found in current class list.');\n    }\n    setShowQRScanner(false);\n  };\n  var saveAttendance = function saveAttendance() {\n    var attendanceData = {\n      date: new Date().toISOString().split('T')[0],\n      location: location ? {\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude\n      } : null,\n      students: students.map(function (student) {\n        return {\n          id: student.id,\n          name: student.name,\n          rollNumber: student.rollNumber,\n          status: student.status\n        };\n      })\n    };\n    console.log('Attendance Data:', attendanceData);\n    Alert.alert('Success', 'Attendance saved successfully!');\n  };\n  var getStatusColor = function getStatusColor(status) {\n    switch (status) {\n      case 'present':\n        return '#4CAF50';\n      case 'absent':\n        return '#F44336';\n      case 'late':\n        return '#FF9800';\n      default:\n        return '#9E9E9E';\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      children: [_jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"headlineSmall\",\n            style: styles.cardTitle,\n            children: \"Today's Attendance\"\n          }), _jsxs(Text, {\n            variant: \"bodyMedium\",\n            style: styles.cardText,\n            children: [\"Date: \", new Date().toLocaleDateString()]\n          }), location && _jsxs(Text, {\n            variant: \"bodySmall\",\n            style: styles.locationText,\n            children: [\"Location: \", location.coords.latitude.toFixed(4), \", \", location.coords.longitude.toFixed(4)]\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsx(Card.Content, {\n          children: _jsxs(View, {\n            style: styles.scannerSection,\n            children: [_jsx(Text, {\n              variant: \"titleMedium\",\n              style: styles.cardTitle,\n              children: \"Quick Scan\"\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return setShowQRScanner(true);\n              },\n              style: styles.scanButton,\n              icon: \"qrcode-scan\",\n              children: \"Scan Student QR Code\"\n            })]\n          })\n        })\n      }), students.map(function (student) {\n        return _jsx(Card, {\n          style: styles.studentCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsxs(View, {\n              style: styles.studentHeader,\n              children: [_jsxs(View, {\n                children: [_jsx(Text, {\n                  variant: \"titleMedium\",\n                  style: styles.studentName,\n                  children: student.name\n                }), _jsxs(Text, {\n                  variant: \"bodySmall\",\n                  style: styles.rollNumber,\n                  children: [\"Roll No: \", student.rollNumber]\n                })]\n              }), _jsx(Chip, {\n                mode: \"outlined\",\n                style: [styles.statusChip, {\n                  borderColor: getStatusColor(student.status)\n                }],\n                textStyle: {\n                  color: getStatusColor(student.status)\n                },\n                children: student.status || 'Not Marked'\n              })]\n            }), _jsxs(View, {\n              style: styles.buttonRow,\n              children: [_jsx(Button, {\n                mode: \"contained\",\n                buttonColor: \"#4CAF50\",\n                style: styles.attendanceButton,\n                onPress: function onPress() {\n                  return markAttendance(student.id, 'present');\n                },\n                children: \"Present\"\n              }), _jsx(Button, {\n                mode: \"contained\",\n                buttonColor: \"#FF9800\",\n                style: styles.attendanceButton,\n                onPress: function onPress() {\n                  return markAttendance(student.id, 'late');\n                },\n                children: \"Late\"\n              }), _jsx(Button, {\n                mode: \"contained\",\n                buttonColor: \"#F44336\",\n                style: styles.attendanceButton,\n                onPress: function onPress() {\n                  return markAttendance(student.id, 'absent');\n                },\n                children: \"Absent\"\n              })]\n            })]\n          })\n        }, student.id);\n      })]\n    }), _jsx(FAB, {\n      icon: \"content-save\",\n      style: styles.fab,\n      onPress: saveAttendance,\n      label: \"Save Attendance\",\n      extended: true\n    }), _jsx(Modal, {\n      visible: showQRScanner,\n      animationType: \"slide\",\n      presentationStyle: \"fullScreen\",\n      children: _jsx(QRScannerWeb, {\n        visible: showQRScanner,\n        onScan: handleQRScan,\n        onClose: function onClose() {\n          return setShowQRScanner(false);\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#121212',\n    padding: 16\n  },\n  card: {\n    marginBottom: 16,\n    backgroundColor: '#1E1E1E'\n  },\n  studentCard: {\n    marginBottom: 8,\n    backgroundColor: '#1E1E1E'\n  },\n  cardTitle: {\n    color: '#FFFFFF'\n  },\n  cardText: {\n    color: '#CCCCCC'\n  },\n  studentName: {\n    color: '#FFFFFF'\n  },\n  rollNumber: {\n    color: '#CCCCCC'\n  },\n  scannerSection: {\n    alignItems: 'center'\n  },\n  scanButton: {\n    marginTop: 12,\n    backgroundColor: '#90CAF9'\n  },\n  studentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  statusChip: {\n    borderWidth: 1,\n    backgroundColor: 'transparent'\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 8\n  },\n  attendanceButton: {\n    flex: 1\n  },\n  locationText: {\n    marginTop: 4,\n    color: '#AAAAAA'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#90CAF9'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Alert","ScrollView","Modal","Text","Button","Card","FAB","List","Chip","Location","Camera","QRScannerWeb","jsx","_jsx","jsxs","_jsxs","AttendanceScreen","_useState","_useState2","_slicedToArray","location","setLocation","_useState3","id","name","status","rollNumber","_useState4","students","setStudents","_useState5","_useState6","cameraPermission","setCameraPermission","_useState7","_useState8","showQRScanner","setShowQRScanner","getLocationPermission","getCameraPermission","_ref","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","alert","getCurrentPositionAsync","apply","arguments","_ref2","_yield$Camera$request","requestCameraPermissionsAsync","markAttendance","studentId","prev","map","student","_objectSpread","handleQRScan","qrData","find","s","saveAttendance","attendanceData","date","Date","toISOString","split","latitude","coords","longitude","console","log","getStatusColor","style","styles","container","children","card","Content","variant","cardTitle","cardText","toLocaleDateString","locationText","toFixed","scannerSection","mode","onPress","scanButton","icon","studentCard","studentHeader","studentName","statusChip","borderColor","textStyle","color","buttonRow","buttonColor","attendanceButton","fab","label","extended","visible","animationType","presentationStyle","onScan","onClose","create","flex","backgroundColor","padding","marginBottom","alignItems","marginTop","flexDirection","justifyContent","borderWidth","gap","position","margin","right","bottom"],"sources":["C:/Users/aanch/rural attendance/rural attendance android app/src/screens/AttendanceScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Alert, ScrollView, Modal } from 'react-native';\r\nimport { Text, Button, Card, FAB, List, Chip } from 'react-native-paper';\r\nimport * as Location from 'expo-location';\r\nimport { Camera } from 'expo-camera';\r\nimport QRScannerWeb from '../components/QRScannerWeb';\r\n\r\nexport default function AttendanceScreen() {\r\n  const [location, setLocation] = useState(null);\r\n  const [students, setStudents] = useState([\r\n    { id: 1, name: 'John Doe', status: null, rollNumber: '001' },\r\n    { id: 2, name: 'Jane Smith', status: null, rollNumber: '002' },\r\n    { id: 3, name: 'Mike Johnson', status: null, rollNumber: '003' },\r\n    { id: 4, name: 'Sarah Wilson', status: null, rollNumber: '004' },\r\n  ]);\r\n  const [cameraPermission, setCameraPermission] = useState(null);\r\n  const [showQRScanner, setShowQRScanner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getLocationPermission();\r\n    getCameraPermission();\r\n  }, []);\r\n\r\n  const getLocationPermission = async () => {\r\n    let { status } = await Location.requestForegroundPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Alert.alert('Permission Denied', 'Location permission is required for attendance tracking');\r\n      return;\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    setLocation(location);\r\n  };\r\n\r\n  const getCameraPermission = async () => {\r\n    const { status } = await Camera.requestCameraPermissionsAsync();\r\n    setCameraPermission(status === 'granted');\r\n  };\r\n\r\n  const markAttendance = (studentId, status) => {\r\n    setStudents(prev => prev.map(student => \r\n      student.id === studentId ? { ...student, status } : student\r\n    ));\r\n  };\r\n\r\n  const handleQRScan = (qrData) => {\r\n    const student = students.find(s => s.id === qrData.id);\r\n    if (student) {\r\n      markAttendance(qrData.id, 'present');\r\n      Alert.alert('Success', `${qrData.name} marked as present!`);\r\n    } else {\r\n      Alert.alert('Error', 'Student not found in current class list.');\r\n    }\r\n    setShowQRScanner(false);\r\n  };\r\n\r\n  const saveAttendance = () => {\r\n    const attendanceData = {\r\n      date: new Date().toISOString().split('T')[0],\r\n      location: location ? {\r\n        latitude: location.coords.latitude,\r\n        longitude: location.coords.longitude\r\n      } : null,\r\n      students: students.map(student => ({\r\n        id: student.id,\r\n        name: student.name,\r\n        rollNumber: student.rollNumber,\r\n        status: student.status\r\n      }))\r\n    };\r\n\r\n    // Here you would typically save to a database\r\n    console.log('Attendance Data:', attendanceData);\r\n    Alert.alert('Success', 'Attendance saved successfully!');\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'present': return '#4CAF50';\r\n      case 'absent': return '#F44336';\r\n      case 'late': return '#FF9800';\r\n      default: return '#9E9E9E';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text variant=\"headlineSmall\" style={styles.cardTitle}>Today's Attendance</Text>\r\n            <Text variant=\"bodyMedium\" style={styles.cardText}>\r\n              Date: {new Date().toLocaleDateString()}\r\n            </Text>\r\n            {location && (\r\n              <Text variant=\"bodySmall\" style={styles.locationText}>\r\n                Location: {location.coords.latitude.toFixed(4)}, {location.coords.longitude.toFixed(4)}\r\n              </Text>\r\n            )}\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <View style={styles.scannerSection}>\r\n              <Text variant=\"titleMedium\" style={styles.cardTitle}>Quick Scan</Text>\r\n              <Button \r\n                mode=\"contained\" \r\n                onPress={() => setShowQRScanner(true)}\r\n                style={styles.scanButton}\r\n                icon=\"qrcode-scan\"\r\n              >\r\n                Scan Student QR Code\r\n              </Button>\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {students.map((student) => (\r\n          <Card key={student.id} style={styles.studentCard}>\r\n            <Card.Content>\r\n              <View style={styles.studentHeader}>\r\n                <View>\r\n                  <Text variant=\"titleMedium\" style={styles.studentName}>{student.name}</Text>\r\n                  <Text variant=\"bodySmall\" style={styles.rollNumber}>Roll No: {student.rollNumber}</Text>\r\n                </View>\r\n                <Chip \r\n                  mode=\"outlined\" \r\n                  style={[styles.statusChip, { borderColor: getStatusColor(student.status) }]}\r\n                  textStyle={{ color: getStatusColor(student.status) }}\r\n                >\r\n                  {student.status || 'Not Marked'}\r\n                </Chip>\r\n              </View>\r\n              \r\n              <View style={styles.buttonRow}>\r\n                <Button \r\n                  mode=\"contained\" \r\n                  buttonColor=\"#4CAF50\"\r\n                  style={styles.attendanceButton}\r\n                  onPress={() => markAttendance(student.id, 'present')}\r\n                >\r\n                  Present\r\n                </Button>\r\n                <Button \r\n                  mode=\"contained\" \r\n                  buttonColor=\"#FF9800\"\r\n                  style={styles.attendanceButton}\r\n                  onPress={() => markAttendance(student.id, 'late')}\r\n                >\r\n                  Late\r\n                </Button>\r\n                <Button \r\n                  mode=\"contained\" \r\n                  buttonColor=\"#F44336\"\r\n                  style={styles.attendanceButton}\r\n                  onPress={() => markAttendance(student.id, 'absent')}\r\n                >\r\n                  Absent\r\n                </Button>\r\n              </View>\r\n            </Card.Content>\r\n          </Card>\r\n        ))}\r\n      </ScrollView>\r\n\r\n      <FAB\r\n        icon=\"content-save\"\r\n        style={styles.fab}\r\n        onPress={saveAttendance}\r\n        label=\"Save Attendance\"\r\n        extended\r\n      />\r\n\r\n      <Modal\r\n        visible={showQRScanner}\r\n        animationType=\"slide\"\r\n        presentationStyle=\"fullScreen\"\r\n      >\r\n        <QRScannerWeb\r\n          visible={showQRScanner}\r\n          onScan={handleQRScan}\r\n          onClose={() => setShowQRScanner(false)}\r\n        />\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#121212',\r\n    padding: 16,\r\n  },\r\n  card: {\r\n    marginBottom: 16,\r\n    backgroundColor: '#1E1E1E',\r\n  },\r\n  studentCard: {\r\n    marginBottom: 8,\r\n    backgroundColor: '#1E1E1E',\r\n  },\r\n  cardTitle: {\r\n    color: '#FFFFFF',\r\n  },\r\n  cardText: {\r\n    color: '#CCCCCC',\r\n  },\r\n  studentName: {\r\n    color: '#FFFFFF',\r\n  },\r\n  rollNumber: {\r\n    color: '#CCCCCC',\r\n  },\r\n  scannerSection: {\r\n    alignItems: 'center',\r\n  },\r\n  scanButton: {\r\n    marginTop: 12,\r\n    backgroundColor: '#90CAF9',\r\n  },\r\n  studentHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  statusChip: {\r\n    borderWidth: 1,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  buttonRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    gap: 8,\r\n  },\r\n  attendanceButton: {\r\n    flex: 1,\r\n  },\r\n  locationText: {\r\n    marginTop: 4,\r\n    color: '#AAAAAA',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#90CAF9',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}